name: CI

on:
  # Trigger on pull requests to main branch
  pull_request:
    branches: [ main ]
  # Also trigger on pushes to main for completeness
  push:
    branches: [ main ]
  # Allow manual workflow dispatch
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Verify Task installation
      run: task --version
      
    - name: Run CI pipeline
      run: task ci
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          coverage/
          .shellspec-quick.log
        retention-days: 30
        if-no-files-found: ignore

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install ShellCheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck
        
    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Run linting
      run: task lint

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Test installation script
      run: |
        # Test the install script in a temporary directory
        cd /tmp
        mkdir test-install
        cd test-install
        bash "$GITHUB_WORKSPACE/install.sh"
        
        # Verify the installation worked
        if [ -f "lib/dot_env.sh" ]; then
          echo "✅ Installation script works correctly"
        else
          echo "❌ Installation script failed"
          exit 1
        fi
        
    - name: Test examples
      run: task examples

  # Test on multiple platforms
  cross-platform:
    name: Cross-platform Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        shell: [bash]
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Run basic tests on ${{ matrix.os }}
      shell: ${{ matrix.shell }}
      run: task test-basic